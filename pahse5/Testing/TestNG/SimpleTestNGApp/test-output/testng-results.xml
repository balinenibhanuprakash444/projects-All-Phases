<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="18" passed="16" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-16T15:22:00 IST" name="Default suite" finished-at="2022-04-16T15:22:00 IST" duration-ms="67">
    <groups>
      <group name="loan">
        <method signature="BikeTest.bikeLoan()[pri:1, instance:test.BikeTest@4d02f94e]" name="bikeLoan" class="test.BikeTest"/>
        <method signature="CarTest.carLoan()[pri:1, instance:test.CarTest@4bb33f74]" name="carLoan" class="test.CarTest"/>
      </group> <!-- loan -->
      <group name="price">
        <method signature="BikeTest.bikeColor()[pri:0, instance:test.BikeTest@4d02f94e]" name="bikeColor" class="test.BikeTest"/>
        <method signature="CarTest.carColor()[pri:0, instance:test.CarTest@4bb33f74]" name="carColor" class="test.CarTest"/>
      </group> <!-- price -->
    </groups>
    <test started-at="2022-04-16T15:22:00 IST" name="Default test" finished-at="2022-04-16T15:22:00 IST" duration-ms="67">
      <class name="test.TestNgHook">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="beforeSuite" finished-at="2022-04-16T15:22:00 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="beforeTest" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="beforeClass" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="beforeMethod" finished-at="2022-04-16T15:22:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="test1" finished-at="2022-04-16T15:22:00 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="afterMethod" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="beforeMethod" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="test2" finished-at="2022-04-16T15:22:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="afterMethod" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="afterClass" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="afterTest" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:test.TestNgHook@50b5ac82]" started-at="2022-04-16T15:22:00 IST" name="afterSuite" finished-at="2022-04-16T15:22:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.TestNgHook -->
      <class name="test.ProductServiceTest">
        <test-method signature="findProductTest()[pri:0, instance:test.ProductServiceTest@2b48a640]" started-at="2022-04-16T15:22:00 IST" name="findProductTest" finished-at="2022-04-16T15:22:00 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findProductTest -->
        <test-method signature="storeProductTest()[pri:0, instance:test.ProductServiceTest@2b48a640]" started-at="2022-04-16T15:22:00 IST" name="storeProductTest" finished-at="2022-04-16T15:22:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeProductTest -->
      </class> <!-- test.ProductServiceTest -->
      <class name="test.BikeTest">
        <test-method signature="bikeColor()[pri:0, instance:test.BikeTest@4d02f94e]" started-at="2022-04-16T15:22:00 IST" name="bikeColor" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bikeColor -->
        <test-method signature="bikePrice()[pri:0, instance:test.BikeTest@4d02f94e]" started-at="2022-04-16T15:22:00 IST" name="bikePrice" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bikePrice -->
        <test-method signature="bikeLoan()[pri:1, instance:test.BikeTest@4d02f94e]" started-at="2022-04-16T15:22:00 IST" name="bikeLoan" finished-at="2022-04-16T15:22:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bikeLoan -->
      </class> <!-- test.BikeTest -->
      <class name="test.OperationTest">
        <test-method signature="testAdd()[pri:0, instance:test.OperationTest@7a419da4]" started-at="2022-04-16T15:22:00 IST" name="testAdd" finished-at="2022-04-16T15:22:00 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [70] but found [30]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [70] but found [30]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at test.OperationTest.testAdd(OperationTest.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testDiv()[pri:0, instance:test.OperationTest@7a419da4]" started-at="2022-04-16T15:22:00 IST" name="testDiv" finished-at="2022-04-16T15:22:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiv -->
        <test-method signature="testMult()[pri:0, instance:test.OperationTest@7a419da4]" started-at="2022-04-16T15:22:00 IST" name="testMult" finished-at="2022-04-16T15:22:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMult -->
        <test-method signature="testSub()[pri:0, instance:test.OperationTest@7a419da4]" started-at="2022-04-16T15:22:00 IST" name="testSub" finished-at="2022-04-16T15:22:00 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [9]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at test.OperationTest.testSub(OperationTest.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSub -->
      </class> <!-- test.OperationTest -->
      <class name="test.PriorityTest">
        <test-method signature="b()[pri:0, instance:test.PriorityTest@14555e0a]" started-at="2022-04-16T15:22:00 IST" name="b" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b -->
        <test-method signature="a()[pri:2, instance:test.PriorityTest@14555e0a]" started-at="2022-04-16T15:22:00 IST" name="a" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
        <test-method signature="d()[pri:2, instance:test.PriorityTest@14555e0a]" started-at="2022-04-16T15:22:00 IST" name="d" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- d -->
        <test-method signature="c()[pri:4, instance:test.PriorityTest@14555e0a]" started-at="2022-04-16T15:22:00 IST" name="c" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c -->
      </class> <!-- test.PriorityTest -->
      <class name="test.CarTest">
        <test-method signature="carColor()[pri:0, instance:test.CarTest@4bb33f74]" started-at="2022-04-16T15:22:00 IST" name="carColor" finished-at="2022-04-16T15:22:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carColor -->
        <test-method signature="carPrice()[pri:0, instance:test.CarTest@4bb33f74]" started-at="2022-04-16T15:22:00 IST" name="carPrice" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carPrice -->
        <test-method signature="carLoan()[pri:1, instance:test.CarTest@4bb33f74]" started-at="2022-04-16T15:22:00 IST" name="carLoan" finished-at="2022-04-16T15:22:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carLoan -->
      </class> <!-- test.CarTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
